{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/PeerConnection.jsx\";\nimport React from \"react\";\nimport adapter from \"webrtc-adapter\";\n\nfunction trace(arg) {\n  var now = (window.performance.now() / 1000).toFixed(3);\n  console.log(now + \": \", arg);\n}\n\nconst pc_config = null;\nthis.pc = new RTCPeerConnection(pc_config);\n/* const constraints = { video: true };\n\nconst success = (stream) => {\n  window.localStream = stream;\n  this.localVideoRef.current.srcObject = stream;\n  this.pc.addStream(stream);\n};\n\nconst fail = (e) => {\n  console.log(\"getUserMedia error: \", e);\n};\n\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail); */\n\nexport class PeerConnection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDisabled: false,\n      callDisabled: true,\n      hangUpDisabled: true\n    };\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.localStream = null;\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.start = () => {\n      this.setState({\n        startDisabled: true\n      });\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      }).then(this.success).catch(e => alert(\"getUserMedia() error:\" + e.name));\n    };\n\n    this.success = stream => {\n      window.localStream = stream;\n      this.localVideoRef.current.srcObject = stream;\n      this.pc.addStream(stream);\n    };\n\n    this.call = () => null;\n\n    this.hangUp = () => null;\n  }\n\n  render() {\n    const {\n      startDisabled,\n      callDisabled,\n      hangUpDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.start,\n      disabled: startDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.call,\n      disabled: callDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Call\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hangUp,\n      disabled: hangUpDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Hang up\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/PeerConnection.jsx"],"names":["React","adapter","trace","arg","now","window","performance","toFixed","console","log","pc_config","pc","RTCPeerConnection","PeerConnection","Component","state","startDisabled","callDisabled","hangUpDisabled","localVideoref","createRef","remoteVideoref","localStream","start","setState","navigator","mediaDevices","getUserMedia","audio","video","then","success","catch","e","alert","name","stream","localVideoRef","current","srcObject","addStream","call","hangUp","render","remoteVideoRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,MAAIC,GAAG,GAAG,CAACC,MAAM,CAACC,WAAP,CAAmBF,GAAnB,KAA2B,IAA5B,EAAkCG,OAAlC,CAA0C,CAA1C,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,GAAG,IAAlB,EAAwBD,GAAxB;AACD;;AAED,MAAMO,SAAS,GAAG,IAAlB;AAEA,KAAKC,EAAL,GAAU,IAAIC,iBAAJ,CAAsBF,SAAtB,CAAV;AAEA;;;;;;;;;;;;;;AAcA,OAAO,MAAMG,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACNC,MAAAA,aAAa,EAAE,KADT;AAENC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAD0C;AAAA,SAOlDC,aAPkD,GAOlCnB,KAAK,CAACoB,SAAN,EAPkC;AAAA,SAQlDC,cARkD,GAQjCrB,KAAK,CAACoB,SAAN,EARiC;AAAA,SASlDE,WATkD,GASpC,IAToC;AAAA,SAUlDX,EAVkD,GAU7C,IAAIC,iBAAJ,CAAsBF,SAAtB,CAV6C;;AAAA,SAYlDa,KAZkD,GAY1C,MAAM;AACZ,WAAKC,QAAL,CAAc;AACZR,QAAAA,aAAa,EAAE;AADH,OAAd;AAGAS,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,QAAAA,KAAK,EAAE,IADK;AAEZC,QAAAA,KAAK,EAAE;AAFK,OADhB,EAKGC,IALH,CAKQ,KAAKC,OALb,EAMGC,KANH,CAMUC,CAAD,IAAOC,KAAK,CAAC,0BAA0BD,CAAC,CAACE,IAA7B,CANrB;AAOD,KAvBiD;;AAAA,SAyBlDJ,OAzBkD,GAyBvCK,MAAD,IAAY;AACpB/B,MAAAA,MAAM,CAACiB,WAAP,GAAqBc,MAArB;AACA,WAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,SAA3B,GAAuCH,MAAvC;AACA,WAAKzB,EAAL,CAAQ6B,SAAR,CAAkBJ,MAAlB;AACD,KA7BiD;;AAAA,SAuClDK,IAvCkD,GAuC3C,MAAM,IAvCqC;;AAAA,SAwClDC,MAxCkD,GAwCzC,MAAM,IAxCmC;AAAA;;AA0ClDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA,aAAF;AAAiBC,MAAAA,YAAjB;AAA+BC,MAAAA;AAA/B,QAAkD,KAAKH,KAA7D;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAE,KAAKsB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,GAAG,EAAE,KAAKO,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKrB,KAAtB;AAA6B,MAAA,QAAQ,EAAEP,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKyB,IAAtB;AAA4B,MAAA,QAAQ,EAAExB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,MAAA,OAAO,EAAE,KAAKyB,MAAtB;AAA8B,MAAA,QAAQ,EAAExB,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAJF,CADF;AAkBD;;AA/DiD","sourcesContent":["import React from \"react\";\nimport adapter from \"webrtc-adapter\";\n\nfunction trace(arg) {\n  var now = (window.performance.now() / 1000).toFixed(3);\n  console.log(now + \": \", arg);\n}\n\nconst pc_config = null;\n\nthis.pc = new RTCPeerConnection(pc_config);\n\n/* const constraints = { video: true };\n\nconst success = (stream) => {\n  window.localStream = stream;\n  this.localVideoRef.current.srcObject = stream;\n  this.pc.addStream(stream);\n};\n\nconst fail = (e) => {\n  console.log(\"getUserMedia error: \", e);\n};\n\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail); */\n\nexport class PeerConnection extends React.Component {\n  state = {\n    startDisabled: false,\n    callDisabled: true,\n    hangUpDisabled: true,\n  };\n\n  localVideoref = React.createRef();\n  remoteVideoref = React.createRef();\n  localStream = null;\n  pc = new RTCPeerConnection(pc_config);\n\n  start = () => {\n    this.setState({\n      startDisabled: true,\n    });\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: true,\n        video: true,\n      })\n      .then(this.success)\n      .catch((e) => alert(\"getUserMedia() error:\" + e.name));\n  };\n\n  success = (stream) => {\n    window.localStream = stream;\n    this.localVideoRef.current.srcObject = stream;\n    this.pc.addStream(stream);\n  };\n\n  /*gotStream = (stream) => {\n    this.localVideoRef.current = stream;\n    this.setState({\n      callDisabled: false,\n      localStream: stream,\n    });\n  }; */\n\n  call = () => null;\n  hangUp = () => null;\n\n  render() {\n    const { startDisabled, callDisabled, hangUpDisabled } = this.state;\n\n    return (\n      <div>\n        <video ref={this.localVideoRef}></video>\n        <video ref={this.remoteVideoRef}></video>\n\n        <div>\n          <button onClick={this.start} disabled={startDisabled}>\n            Start\n          </button>\n          <button onClick={this.call} disabled={callDisabled}>\n            Call\n          </button>\n          <button onClick={this.hangUp} disabled={hangUpDisabled}>\n            Hang up\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}