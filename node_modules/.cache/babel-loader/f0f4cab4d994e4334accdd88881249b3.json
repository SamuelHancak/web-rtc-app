{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/PeerConnection.jsx\";\nimport React from \"react\";\nimport adapter from \"webrtc-adapter\";\n\nfunction trace(arg) {\n  var now = (window.performance.now() / 1000).toFixed(3);\n  console.log(now + \": \", arg);\n}\n\nconst constraints = {\n  video: true\n};\n\nconst success = stream => {\n  window.localStream = stream;\n  this.localVideoRef.current.srcObject = stream;\n  this.pc.addStream(stream);\n};\n\nconst fail = e => {\n  console.log(\"getUserMedia error: \", e);\n};\n\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail);\nexport class PeerConnection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDisabled: false,\n      callDisabled: true,\n      hangUpDisabled: true\n    };\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.localStream = null;\n\n    this.call = () => null;\n\n    this.hangUp = () => null;\n  }\n\n  render() {\n    const {\n      startDisabled,\n      callDisabled,\n      hangUpDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.localVideoRef,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.remoteVideoRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.start,\n      disabled: startDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.call,\n      disabled: callDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Call\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hangUp,\n      disabled: hangUpDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Hang up\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/PeerConnection.jsx"],"names":["React","adapter","trace","arg","now","window","performance","toFixed","console","log","constraints","video","success","stream","localStream","localVideoRef","current","srcObject","pc","addStream","fail","e","navigator","mediaDevices","getUserMedia","then","catch","PeerConnection","Component","state","startDisabled","callDisabled","hangUpDisabled","localVideoref","createRef","remoteVideoref","call","hangUp","render","remoteVideoRef","start"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,MAAIC,GAAG,GAAG,CAACC,MAAM,CAACC,WAAP,CAAmBF,GAAnB,KAA2B,IAA5B,EAAkCG,OAAlC,CAA0C,CAA1C,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,GAAG,IAAlB,EAAwBD,GAAxB;AACD;;AAED,MAAMO,WAAW,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAApB;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAC1BR,EAAAA,MAAM,CAACS,WAAP,GAAqBD,MAArB;AACA,OAAKE,aAAL,CAAmBC,OAAnB,CAA2BC,SAA3B,GAAuCJ,MAAvC;AACA,OAAKK,EAAL,CAAQC,SAAR,CAAkBN,MAAlB;AACD,CAJD;;AAMA,MAAMO,IAAI,GAAIC,CAAD,IAAO;AAClBb,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCY,CAApC;AACD,CAFD;;AAIAC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCd,WAApC,EAAiDe,IAAjD,CAAsDb,OAAtD,EAA+Dc,KAA/D,CAAqEN,IAArE;AAEA,OAAO,MAAMO,cAAN,SAA6B3B,KAAK,CAAC4B,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACNC,MAAAA,aAAa,EAAE,KADT;AAENC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAD0C;AAAA,SAOlDC,aAPkD,GAOlCjC,KAAK,CAACkC,SAAN,EAPkC;AAAA,SAQlDC,cARkD,GAQjCnC,KAAK,CAACkC,SAAN,EARiC;AAAA,SASlDpB,WATkD,GASpC,IAToC;;AAAA,SAgClDsB,IAhCkD,GAgC3C,MAAM,IAhCqC;;AAAA,SAiClDC,MAjCkD,GAiCzC,MAAM,IAjCmC;AAAA;;AAmClDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,aAAF;AAAiBC,MAAAA,YAAjB;AAA+BC,MAAAA;AAA/B,QAAkD,KAAKH,KAA7D;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAE,KAAKd,aAAjB;AAAgC,MAAA,QAAQ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,GAAG,EAAE,KAAKwB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKC,KAAtB;AAA6B,MAAA,QAAQ,EAAEV,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKM,IAAtB;AAA4B,MAAA,QAAQ,EAAEL,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,MAAA,OAAO,EAAE,KAAKM,MAAtB;AAA8B,MAAA,QAAQ,EAAEL,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAJF,CADF;AAkBD;;AAxDiD","sourcesContent":["import React from \"react\";\nimport adapter from \"webrtc-adapter\";\n\nfunction trace(arg) {\n  var now = (window.performance.now() / 1000).toFixed(3);\n  console.log(now + \": \", arg);\n}\n\nconst constraints = { video: true };\n\nconst success = (stream) => {\n  window.localStream = stream;\n  this.localVideoRef.current.srcObject = stream;\n  this.pc.addStream(stream);\n};\n\nconst fail = (e) => {\n  console.log(\"getUserMedia error: \", e);\n};\n\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail);\n\nexport class PeerConnection extends React.Component {\n  state = {\n    startDisabled: false,\n    callDisabled: true,\n    hangUpDisabled: true,\n  };\n\n  localVideoref = React.createRef();\n  remoteVideoref = React.createRef();\n  localStream = null;\n\n  /*  start = () => {\n    this.setState({\n      startDisabled: true,\n    });\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: true,\n        video: true,\n      })\n      .then(this.gotStream)\n      .catch((e) => alert(\"getUserMedia() error:\" + e.name));\n  };\n\n  gotStream = (stream) => {\n    this.localVideoRef.current = stream;\n    this.setState({\n      callDisabled: false,\n      localStream: stream,\n    });\n  }; */\n\n  call = () => null;\n  hangUp = () => null;\n\n  render() {\n    const { startDisabled, callDisabled, hangUpDisabled } = this.state;\n\n    return (\n      <div>\n        <video ref={this.localVideoRef} autoPlay></video>\n        <video ref={this.remoteVideoRef}></video>\n\n        <div>\n          <button onClick={this.start} disabled={startDisabled}>\n            Start\n          </button>\n          <button onClick={this.call} disabled={callDisabled}>\n            Call\n          </button>\n          <button onClick={this.hangUp} disabled={hangUpDisabled}>\n            Hang up\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}