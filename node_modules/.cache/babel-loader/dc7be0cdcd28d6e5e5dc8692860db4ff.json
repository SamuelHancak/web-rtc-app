{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/App.js\";\nimport React, { Component } from \"react\"; //import logo from \"./logo.svg\";\n\nimport \"./App.css\"; //import { PeerConnection } from \"./PeerConnection\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOffer = () => {\n      console.log(\"Offer\");\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(JSON.stringify(sdp));\n        this.pc.setLocalDescription(sdp);\n      }, e => {});\n    };\n\n    this.setRemoteDescription = () => {\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.localVideoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const pc_config = null;\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = e => {\n      if (e.candidate) console.log(JSON.stringify(e.candidate));\n    };\n\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    this.pc.onaddStream = e => {\n      this.remoteVideoRef.current.srcObject = e.stream;\n    };\n\n    const constraints = {\n      video: true\n    };\n\n    const success = stream => {\n      window.localStream = stream;\n      this.localVideoRef.current.srcObject = stream;\n      this.pc.addStream(stream);\n    };\n\n    const fail = e => {\n      console.log(\"getUserMedia error: \", e);\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: \"black\"\n      },\n      ref: this.localVideoRef,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: \"black\"\n      },\n      ref: this.remoteVideoRef,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Answer\"));\n  }\n  /* render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\"> Welcome to React </h1>\n        </header>\n        <PeerConnection />\n      </div>\n    );\n  } */\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/App.js"],"names":["React","Component","App","constructor","props","createOffer","console","log","pc","offerToReceiveVideo","then","sdp","JSON","stringify","setLocalDescription","e","setRemoteDescription","desc","parse","textref","value","RTCSessionDescription","localVideoRef","createRef","componentDidMount","pc_config","RTCPeerConnection","onicecandidate","candidate","oniceconnectionstatechange","onaddStream","remoteVideoRef","current","srcObject","stream","constraints","video","success","window","localStream","addStream","fail","navigator","mediaDevices","getUserMedia","catch","render","width","height","margin","backgroundColor","createAnswer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n//import { PeerConnection } from \"./PeerConnection\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const pc_config = null;\n\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = (e) => {\n      if (e.candidate) console.log(JSON.stringify(e.candidate));\n    };\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    this.pc.onaddStream = (e) => {\n      this.remoteVideoRef.current.srcObject = e.stream;\n    };\n\n    const constraints = { video: true };\n\n    const success = (stream) => {\n      window.localStream = stream;\n      this.localVideoRef.current.srcObject = stream;\n      this.pc.addStream(stream);\n    };\n\n    const fail = (e) => {\n      console.log(\"getUserMedia error: \", e);\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(fail);\n  }\n\n  createOffer = () => {\n    console.log(\"Offer\");\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then(\n      (sdp) => {\n        console.log(JSON.stringify(sdp));\n        this.pc.setLocalDescription(sdp);\n      },\n      (e) => {}\n    );\n  };\n\n  setRemoteDescription = () => {\n    const desc = JSON.parse(this.textref.value);\n\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n  };\n\n  render() {\n    return (\n      <div>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: \"black\",\n          }}\n          ref={this.localVideoRef}\n          autoPlay\n        ></video>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: \"black\",\n          }}\n          ref={this.remoteVideoRef}\n          autoPlay\n        ></video>\n\n        <button onClick={this.createOffer}>Offer</button>\n        <button onClick={this.createAnswer}>Answer</button>\n      </div>\n    );\n  }\n  /* render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\"> Welcome to React </h1>\n        </header>\n        <PeerConnection />\n      </div>\n    );\n  } */\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}