{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/App.js\";\nimport React, { Component } from \"react\"; //import logo from \"./logo.svg\";\n\nimport \"./App.css\"; //import { PeerConnection } from \"./PeerConnection\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.localVideoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const pc_config = null;\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = e => {\n      if (e.candidate) console.log(JSON.stringify(e.candidate));\n    };\n\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    const contrains = {\n      video: true\n    };\n\n    const success = stream => {\n      this.localVideoRef.current.srcObject = stream;\n    };\n\n    const fail = e => {\n      console.log(\"getUserMedia error: \", e);\n    };\n\n    navigator.mediaDevices.getUserMedia(contrains).then(success).catch(fail);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: \"black\"\n      },\n      ref: this.localVideoRef,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 240,\n        height: 240,\n        margin: 5,\n        backgroundColor: \"black\"\n      },\n      ref: this.remoteVideoRef,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Answer\"));\n  }\n  /* render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\"> Welcome to React </h1>\n        </header>\n        <PeerConnection />\n      </div>\n    );\n  } */\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samuelhancak/Documents/WebRTC/web-rtc-audio/src/App.js"],"names":["React","Component","App","constructor","props","localVideoRef","createRef","componentDidMount","pc_config","pc","RTCPeerConnection","onicecandidate","e","candidate","console","log","JSON","stringify","oniceconnectionstatechange","contrains","video","success","stream","current","srcObject","fail","navigator","mediaDevices","getUserMedia","then","catch","render","width","height","margin","backgroundColor","remoteVideoRef","createOffer","createAnswer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP,C,CACA;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqBL,KAAK,CAACM,SAAN,EAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAG,IAAlB;AAEA,SAAKC,EAAL,GAAU,IAAIC,iBAAJ,CAAsBF,SAAtB,CAAV;;AAEA,SAAKC,EAAL,CAAQE,cAAR,GAA0BC,CAAD,IAAO;AAC9B,UAAIA,CAAC,CAACC,SAAN,EAAiBC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,CAAC,CAACC,SAAjB,CAAZ;AAClB,KAFD;;AAIA,SAAKJ,EAAL,CAAQS,0BAAR,GAAsCN,CAAD,IAAO;AAC1CE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACD,KAFD;;AAIA,UAAMO,SAAS,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;;AAEA,UAAMC,OAAO,GAAIC,MAAD,IAAY;AAC1B,WAAKjB,aAAL,CAAmBkB,OAAnB,CAA2BC,SAA3B,GAAuCF,MAAvC;AACD,KAFD;;AAIA,UAAMG,IAAI,GAAIb,CAAD,IAAO;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,CAApC;AACD,KAFD;;AAIAc,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCT,SAApC,EAA+CU,IAA/C,CAAoDR,OAApD,EAA6DS,KAA7D,CAAmEL,IAAnE;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,GADF;AAELC,QAAAA,MAAM,EAAE,GAFH;AAGLC,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,eAAe,EAAE;AAJZ,OADT;AAOE,MAAA,GAAG,EAAE,KAAK9B,aAPZ;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE;AACE,MAAA,KAAK,EAAE;AACL2B,QAAAA,KAAK,EAAE,GADF;AAELC,QAAAA,MAAM,EAAE,GAFH;AAGLC,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,eAAe,EAAE;AAJZ,OADT;AAOE,MAAA,GAAG,EAAE,KAAKC,cAPZ;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAsBE;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtBF,eAuBE;AAAQ,MAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,CADF;AA2BD;AACD;;;;;;;;;;;;;AA9D0B;;AA2E5B,eAAepC,GAAf","sourcesContent":["import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n//import { PeerConnection } from \"./PeerConnection\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const pc_config = null;\n\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = (e) => {\n      if (e.candidate) console.log(JSON.stringify(e.candidate));\n    };\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    const contrains = { video: true };\n\n    const success = (stream) => {\n      this.localVideoRef.current.srcObject = stream;\n    };\n\n    const fail = (e) => {\n      console.log(\"getUserMedia error: \", e);\n    };\n\n    navigator.mediaDevices.getUserMedia(contrains).then(success).catch(fail);\n  }\n\n  render() {\n    return (\n      <div>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: \"black\",\n          }}\n          ref={this.localVideoRef}\n          autoPlay\n        ></video>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: \"black\",\n          }}\n          ref={this.remoteVideoRef}\n          autoPlay\n        ></video>\n\n        <button onClick={this.createOffer}>Offer</button>\n        <button onClick={this.createAnswer}>Answer</button>\n      </div>\n    );\n  }\n  /* render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\"> Welcome to React </h1>\n        </header>\n        <PeerConnection />\n      </div>\n    );\n  } */\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}